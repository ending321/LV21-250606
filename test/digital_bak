#include<stdio.h>
#include<stdint.h>
#include<stdlib.h>
#include<sys/types.h>
#include<sys/stat.h>
#include<fcntl.h>
#include<sys/ioctl.h>
#include<unistd.h>
#include<linux/spi/spidev.h>

static const char *device = "/dev/spidev0.0";
static uint8_t mode = 0;
static uint8_t bits=8;
static uint32_t speed=4000;
static void pabort(const char *s){
	perror(s);
	abort();
}
int main(int argc, char *argv[]){
	if(argc != 2){
	    printf("%s <num>\n", argv[0]);
	    return -1;
	}
	int fd = open(device, O_RDWR);
	if(fd<0){
	    pabort("open");
	}
	int ret = ioctl(fd, SPI_IOC_WR_MODE, &mode); //设置写模式
	if(ret<0){
	    pabort("ioctl");
	}
	//设置每个字含多少位
	ret = ioctl(fd, SPI_IOC_WR_BITS_PER_WORD, &bits);
	if(ret<0){
	    pabort("can't set bits per word");
	}
	//设置速率
	ret = ioctl(fd, SPI_IOC_WR_MAX_SPEED_HZ, &speed);
	if(ret<0){
	    pabort("can't set max speed hz");
	}
	//printf("spi mode:%d\n", mode);
	//printf("bits per word:%d\n", bits);
	//printf("max speed %d HZ (%dKHZ)\n", speed, speed/1000);

	uint8_t num[] = {0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f, 0x77, 0x7c, 0x39, 0x5e, 0x79, 0x71};
	int t = 300;
	while(t--){
		uint32_t num1;
	    if(sscanf(argv[1], "%04x", &num1) != 1){
	        printf("argument error.\n");
		return -1;
	    }
	    //printf("[%d] %04x\n", __LINE__, num1);
	    for(int i=0; i<4; i++){
	        int pos = 1<<i;
		uint8_t buf[2] = {};
		buf[0] = pos;
		buf[1] = num[(num1 >> ((4-i) * 4)) & 0xf];
		//printf("[%d] %x\n", __LINE__, buf[1]);
		if(write(fd, buf, 2)<0)
		    perror("write");
		usleep(300000);
	    }
	}
	uint8_t buf[2] = {0x8, 0x0};
	write(fd, buf, 2);
	close(fd);
	return 0;
}
